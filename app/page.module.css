.main {
  background: linear-gradient(to top right, rgba(0,0,0,1), rgba(102,58,0,1));
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  padding: 6rem;
  min-height: 100vh;
  color: white;
}

.pagetitle {
  border-radius: var(--border-radius);
  padding: 0.75rem 40rem;
  box-shadow: 14px 14px rgba(0,0,0,0.3);
  border: 1px solid rgba(255,144,0, 1);
  background: rgba(255,144,0, 0.1);
}

.centerText {
  border-radius: var(--border-radius);
  padding: 1.4rem 2rem;
  background: rgba(0,0,0,0);
  box-shadow: 8px 8px rgba(0,0,0,0);
  filter: blur(15px);
  transform: scale(0.85,0.85);
  transition: filter 200ms, transform 200ms, background 200ms, box-shadow 200ms;
}

.code {
  font-weight: 700;
  font-family: var(--font-mono);
}

.grid {
  //display: grid;
  //grid-template-columns: repeat(3, minmax(33%, auto));
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  max-width: 100%;
  width: var(--max-width);
}

.card {
  padding: 1rem 1.2rem;
  border-radius: var(--border-radius);
  background: rgba(var(--card-rgb), 0);
  border: 1px solid rgba(var(--card-border-rgb), 0);
  transition: background 200ms, border 200ms;
}

.card span {
  display: inline-block;
  transition: transform 200ms;
}

.card h2 {
  font-weight: 600;
  margin-bottom: 0.7rem;
}

.card p {
  margin: 0;
  opacity: 0.6;
  font-size: 0.9rem;
  line-height: 1.5;
  max-width: 30ch;
  text-wrap: pretty;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  padding: 4rem 0;
}

.logo {
  position: relative;
  filter: none;
}
/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    box-shadow: 16px 16px rgba(0,0,0,0.3);
    border: 1px solid rgba(255,144,0, 1);
    background: rgba(255,144,0, 0.1);
  }

  .card:hover span {
    transform: rotate(90deg);
  }

  .centerText:hover {
    filter: blur(0px);
    transform: scale(1.2,1.2);
    background: rgba(255,144,0, 0.1);
    box-shadow: 20px 20px rgba(0,0,0,0.3);
  }
}

@media (prefers-reduced-motion) {
  .card:hover span {
    transform: none;
  }
}

/* Mobile */
@media (max-width: 700px) {
  .content {
    padding: 4rem;
  }

  .centerText {
    width: 32rem;
    filter: blur(0px);
    transform: scale(0.8,0.8);
    background: rgba(255,144,0, 0.1);
    padding: 1.4rem 5rem;
    box-shadow: 20px 20px rgba(0,0,0,0.3);
    white-space: normal;
  }


  .grid {
    grid-template-columns: 1fr;
    margin-bottom: 120px;
    max-width: 320px;
    text-align: center;
    flex-direction: column;
  }

  .card {
    margin: 1rem;
    box-shadow: 16px 16px rgba(0,0,0,0.3);
    border: 1px solid rgba(255,144,0, 1);
    background: rgba(255,144,0, 0.1);
    padding: 1rem 2.5rem;
  }

  .card h2 {
    margin-bottom: 0.5rem;
  }

  .center {
    padding: 8rem 0 6rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }

  .description {
    font-size: 0.8rem;
  }

  .description a {
    padding: 1rem;
  }

  .description p,
  .description div {
    display: flex;
    justify-content: center;
    position: fixed;
    width: 100%;
  }

  .description p {
    align-items: center;
    inset: 0 0 auto;
    padding: 2rem 1rem 1.4rem;
    border-radius: 0;
    border: none;
    border-bottom: 1px solid rgba(var(--callout-border-rgb), 0.25);
    background: rgba(0,0,0,1);
    background-clip: padding-box;
  }

  .description div {
    align-items: flex-end;
    pointer-events: none;
    inset: auto 0 0;
    padding: 2rem;
    height: 200px;
    background: rgba(0,0,0,1);
    z-index: 1;
  }
}

/* Tablet and Smaller Desktop */
@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 50%);
  }
  .centerText {
    filter: blur(0px);
    transform: scale(1.2,1.2);
    background: rgba(255,144,0, 0.1);
    box-shadow: 20px 20px rgba(0,0,0,0.3);
  }

}

@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
